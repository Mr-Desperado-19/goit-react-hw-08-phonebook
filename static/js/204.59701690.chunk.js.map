{"version":3,"file":"static/js/204.59701690.chunk.js","mappings":"wUAiBaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,GAAG,WACHC,MAAM,SACNC,QAAQ,SACRC,EAAE,QACFC,cAAc,SAAQC,SAAA,CAErBV,IACCW,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAS,KAAKC,MAAM,UAAUC,GAAG,OAAML,SAAC,sCAIhDC,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACX,GAAG,QAAQY,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAAGT,UACvCC,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CACLC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,KAAM,IAERC,SAAU,SAAAC,GACR,IAAQF,EAA0BE,EAA1BF,KAAMH,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAErBzB,GACE8B,EAAAA,EAAAA,IAAS,CACPH,KAAMA,EACNH,MAAOA,EACPC,SAAUA,IAGhB,EAAEb,SAED,SAAAmB,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/BrB,EAAAA,EAAAA,KAAA,QAAMe,SAAUI,EAAapB,UAC3BP,EAAAA,EAAAA,MAAC8B,EAAAA,EAAM,CAACC,QAAS,EAAG5B,MAAM,aAAYI,SAAA,EACpCP,EAAAA,EAAAA,MAACgC,EAAAA,GAAW,CAAAzB,SAAA,EACVC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACC,QAAQ,OAAM3B,SAAC,eAC1BC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,OACHhB,KAAK,OACLiB,KAAK,OACLC,QAAQ,eAGZxC,EAAAA,EAAAA,MAACgC,EAAAA,GAAW,CAAAzB,SAAA,EACVC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACC,QAAQ,QAAO3B,SAAC,mBAC3BC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,QACHhB,KAAK,QACLiB,KAAK,QACLC,QAAQ,eAGZxC,EAAAA,EAAAA,MAACgC,EAAAA,GAAW,CAACS,YAAab,EAAOR,UAAYS,EAAQT,SAASb,SAAA,EAC5DC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACC,QAAQ,WAAU3B,SAAC,cAC9BC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,WACHhB,KAAK,WACLiB,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAI9C,EAMJ,OAJI8C,EAAMC,OAAS,IACjB/C,EAAQ,+CAGHA,CACT,KAEFW,EAAAA,EAAAA,KAACqC,EAAAA,GAAgB,CAAAtC,SAAEqB,EAAOR,eAG5BZ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJC,GAAIU,EAAAA,EACJR,GAAG,aACHhB,KAAK,aACLyB,YAAY,SAAQxC,SACrB,kBAGDC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACT,KAAK,SAASQ,YAAY,OAAOE,MAAM,OAAM1C,SAAC,gBAInD,QAMnB,EClHe,SAAS2C,IACtB,OAAO1C,EAAAA,EAAAA,KAACd,EAAY,GACtB,C","sources":["components/registerForm/MyRegisterForm.js","pages/Register.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport { selectErrorRegistration } from 'redux/auth/selectors';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Text,\n} from '@chakra-ui/react';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectErrorRegistration);\n\n  return (\n    <Flex\n      bg=\"gray.100\"\n      align=\"center\"\n      justify=\"center\"\n      h=\"100vh\"\n      flexDirection=\"column\"\n    >\n      {error && (\n        <Text fontSize=\"lg\" color=\"#E74C3C\" mb=\"10px\">\n          Something went wrong. Try again!\n        </Text>\n      )}\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            rememberMe: false,\n            name: '',\n          }}\n          onSubmit={values => {\n            const { name, email, password } = values;\n\n            dispatch(\n              register({\n                name: name,\n                email: email,\n                password: password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"name\">User Name</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 7) {\n                        error = 'Password must contain at least 7 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <Field\n                  as={Checkbox}\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  colorScheme=\"purple\"\n                >\n                  Remember me?\n                </Field>\n                <Button type=\"submit\" colorScheme=\"teal\" width=\"full\">\n                  Sign Up\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { RegisterForm } from 'components/registerForm/MyRegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n}\n"],"names":["RegisterForm","dispatch","useDispatch","error","useSelector","selectErrorRegistration","_jsxs","Flex","bg","align","justify","h","flexDirection","children","_jsx","Text","fontSize","color","mb","Box","p","rounded","w","Formik","initialValues","email","password","rememberMe","name","onSubmit","values","register","_ref","handleSubmit","errors","touched","VStack","spacing","FormControl","FormLabel","htmlFor","Field","as","Input","id","type","variant","isInvalid","validate","value","length","FormErrorMessage","Checkbox","colorScheme","Button","width","Register"],"sourceRoot":""}